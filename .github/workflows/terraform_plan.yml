name: 'Terraform Plan'

on:
  workflow_dispatch: {}
  push:
    branches:
      - '*'
      - '!master'
      - '!dev'

env:
  TF_WARN_OUTPUT_ERRORS: 1
  TF_WORKSPACE: dsfkit-ci-cd
  TF_CLI_ARGS: "-no-color"
  TF_INPUT: 0

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: test

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: true

    # Generates an execution plan for Terraform
    - name: Terraform Plan (simple)
      run: terraform plan

    - name: Terraform Plan (hadr)
      run: TF_WORKSPACE=dsfkit-ci-cd-hadr terraform plan
