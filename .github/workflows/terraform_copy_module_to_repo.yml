name: 'Copy module to new repo'

on:
  workflow_dispatch: {}
  push:
    branches:
      - 'workflow-to-create-hub-dedicate-repo'

permissions:
  contents: write
  repository-projects: write

jobs:
  copy_module_to_new_repo:
    name: 'Copy module to new repo'
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        include:
          - source_module: "hub"
            destination_repo: "terraform-aws-dsf-hub"
            hidden_submodule: "sonar-base-instance"
          - source_module: "agentless-gw"
            destination_repo: "terraform-aws-dsf-agentless-gw"
            hidden_submodule: "sonar-base-instance"
          - source_module: "hadr"
            destination_repo: "terraform-null-dsf-hadr"
          - source_module: "federation"
            destination_repo: "terraform-null-dsf-federation"

    env:
      source_module: ${{ matrix.source_module }}
      destination_repo: ${{ matrix.destination_repo }}
      hidden_submodule: ${{ matrix.hidden_submodule }}

    outputs:
      module_github_repo: ${{ format('https://github.com/imperva/{0}', matrix.destination_repo) }}
    
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Filter branch
        run: |
          set -x
          git branch
          if [ -n "${hidden_submodule}" ]; then
            git filter-branch --prune-empty --tree-filter 'sed -i "s/..\/..\/modules/.\/_modules/g" deploy/modules/${source_module}/main.tf; mkdir -p deploy/modules/${source_module}/_modules; mv deploy/modules/${hidden_submodule} deploy/modules/${source_module}/_modules/; true;' --tag-name-filter cat -- --all HEAD
          fi
          git filter-branch -f --prune-empty --subdirectory-filter deploy/modules/${source_module}/ --tag-name-filter cat -- --all HEAD

      - name: Push to module repo
        env:
          github_token: ${{ secrets.PUSH_TO_OTHER_REPOS_TOKEN }}
        run: |
          find . | grep -v ".git/"
          git config --unset-all http.https://github.com/.extraheader # override github_action own authentication method
          git remote set-url origin https://${github_token}@github.com/imperva/${destination_repo}.git
          git branch -m workflow-to-create-hub-dedicate-repo main
          git push -f origin HEAD:main --tags

