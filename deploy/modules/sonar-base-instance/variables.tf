variable "name" {
  type = string
}

variable "subnet_id" {
  type        = string
  description = "Subnet id for the ec2 instance"
}

variable "ec2_instance_type" {
  type        = string
  description = "Ec2 instance type for the DSF base instance"
}

variable "ebs_state_disk_size" {
  validation {
    condition     = var.ebs_state_disk_size >= 100
    error_message = "DSF base instance disk size must be at least 100GB"
  }
}

variable "public_ip" {
  type        = bool
  description = "Create public IP for the instance"
}

variable "key_pair" {
  type        = string
  description = "key pair for DSF base instance. This key must be generated by by the hub module and present on the local disk."
}

variable "web_console_sg_ingress_cidr" {
  type        = list(any)
  description = "List of allowed ingress cidr patterns for the DSF instance for web console"
  default     = []
}

variable "sg_ingress_cidr" {
  type        = list(any)
  description = "List of allowed ingress cidr patterns for the DSF instance for ssh and internal protocols"
}

variable "iam_instance_profile_id" {
  type        = string
  default     = null
  description = "DSF base ec2 IAM instance profile id"
}

variable "dsf_base_ami_name_tag" {
  type    = string
  default = "RHEL-8.6.0_HVM-20220503-x86_64-2-Hourly2-GP2" # Exists on all regions
  # default = "RHEL-7.9_HVM-20220512-x86_64-1-Hourly2-GP2" Exists on all regions
}

variable "resource_type" {
  type = string
  validation {
    condition     = contains(["hub", "gw"], var.resource_type)
    error_message = "Allowed values for dsf type \"hub\" or \"gw\"."
  }
  nullable = false
}

variable "admin_password" {
  type        = string
  sensitive   = true
  description = "Admin password"
  validation {
    condition     = length(var.admin_password) > 8
    error_message = "Admin password must be at least 8 characters"
  }
  nullable = false
}

variable "ssh_key_pair_path" {
  type        = string
  description = "SSH key path"
  nullable    = false
}

variable "additional_install_parameters" {
  default = ""
}

variable "installation_location" {
  type = object({
    s3_bucket = string
    s3_key    = string
  })
  description = "S3 DSF installation location"
  nullable    = false
}

variable "proxy_address" {
  type        = string
  description = "Proxy address used for ssh"
  default     = null
}

variable "sonarw_public_key" {
  type        = string
  description = "SSH public key for sonarw user"
  nullable    = false
}

variable "sonarw_secret_name" {
  type        = string
  description = "Secret name for sonarw ssh key"
  nullable    = false
}