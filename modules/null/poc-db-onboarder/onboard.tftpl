#!/bin/bash
set -e
set -x

client_id="terraform-automation"
reason="Token autogenerated by terraform"

function curl_fail_on_error() {
  OUTPUT_FILE=$(mktemp)
  HTTP_CODE=$(curl --silent --output $OUTPUT_FILE --write-out "%%{http_code}" "$@")
  if [[ $HTTP_CODE -lt 200 || $HTTP_CODE -gt 299 ]] ; then
    >&2 cat $OUTPUT_FILE; >&2 echo
    return 22
  fi
  cat $OUTPUT_FILE; echo
  rm $OUTPUT_FILE
}

usc_access_token=${usc_access_token}

# Add cloud account
if ! curl --fail -k 'https://127.0.0.1:8443/dsf/api/v1/cloud-accounts/${account_id}' --header "Authorization: Bearer $usc_access_token" &>/dev/null; then
    echo ********Adding new cloud account********
    if curl_fail_on_error -k --location --request POST 'https://127.0.0.1:8443/dsf/api/v1/cloud-accounts' \
        --header "Authorization: Bearer $usc_access_token" \
        --header 'Content-Type: application/json' \
        --data '${cloud_account_data}'; then
        echo ********Cloud account was added successfully********
    else
        curl_fail_on_error -k 'https://127.0.0.1:8443/dsf/api/v1/cloud-accounts/${account_id}' --header "Authorization: Bearer $usc_access_token" >/dev/null
        echo ********Cloud account already exists********
    fi
fi

# Add database asset
if ! curl --fail -k 'https://127.0.0.1:8443/dsf/api/v1/data-sources/${database_id}' --header "Authorization: Bearer $usc_access_token" &>/dev/null; then
    echo ********Adding new database asset********
    curl_fail_on_error -k --location --request POST 'https://127.0.0.1:8443/dsf/api/v1/data-sources' \
        --header "Authorization: Bearer $usc_access_token" \
        --header 'Content-Type: application/json' \
        --data '${database_asset_data}'
%{ if enable_audit ~}
    echo ********Sleeping 1 minute before syncing gateway and enabling audit logs********
    sleep 60
%{ endif ~}
fi

%{ if enable_audit ~}
# Syncing cloud account and db with the gateway
echo ********Syncing cloud account asset with gateway********
curl_fail_on_error -k --location --request POST 'https://127.0.0.1:8443/dsf/api/v1/cloud-accounts/${account_id}/operations/sync-with-gateway' \
    --header "Authorization: Bearer $usc_access_token" \
    --header 'Content-Type: application/json'

echo ********Syncing DB asset with gateway********
curl_fail_on_error -k --location --request POST 'https://127.0.0.1:8443/dsf/api/v1/data-sources/${database_id}/operations/sync-with-gateway' \
    --header "Authorization: Bearer $usc_access_token" \
    --header 'Content-Type: application/json'

# Enable audit
echo ********Enabling audit on new asset********
curl_fail_on_error -k --location --request POST 'https://127.0.0.1:8443/dsf/api/v1/data-sources/${database_id}/operations/enable-audit-collection' \
    --header "Authorization: Bearer $usc_access_token" \
    --header 'Content-Type: application/json'

# Verify log aggregator is active
max_sleep=600
while true; do
    if [ "$(curl_fail_on_error -k 'https://127.0.0.1:8443/dsf/api/v1/log-aggregators/${database_id}' --header "Authorization: Bearer $usc_access_token" | jq -r .data.auditState)" == "YES" ]; then
        echo ********Log aggregator is found********
        break
    fi
    sleep 20
    max_sleep=$(($max_sleep - 20))
    if [ "$max_sleep" -le 0 ]; then
        echo ********Log aggregator is NOT found********
        exit 1
    fi
done
%{ endif ~}
echo DONE
