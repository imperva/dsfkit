next:
    Azure kms equivalent - value with keys (az keyvault key encrypt --value "$val" --vault-name eytan-remove-me --name eytan-remove-me --algorithm RSA-OAEP)
    Investigate CTT on azure
    Make sure the new disk approach is robust against termiantion and userdata change
    unify the disk approach for aws & azure
    azure nat - for each subnet
    federation - remove commented out
    change gw group ebs details name and schema
    rename vpc in example
Azure tasks:
    reorganize the example directory structure
        and create hadr example
    release the new modules (change module source to point to tf registry)
    research:
        # tbd: verify how a customer would pass on his creds to this provider https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs
        Consider changing Azure/network/azurerm to Azure/vnet/azurerm module
    Get a complete list of permissions we need in azure
    change the "elastic" terminology
        "create_and_attach_public_elastic_ip". Elastic means nothing in the context of azure
    compare all code aws vs azure
    Terraform apply kay vault sporadic failures
        https://github.com/hashicorp/terraform-provider-azurerm/issues/18309
    vm roles
        Give "azurerm_role_assignment" resource minimal permissions
        Allow passing role_definition_name from outside
    Vault (secret)
        Reduce access policy to minimum
        p1 - We currently use azure vault's secrets. We should probably use azure vault's keys instead.
    destroy fails the first time it runs
        A lot of times, the first destory fails with some vault voodoo (and additional destory solves this)
        https://github.com/hashicorp/terraform-provider-azurerm/issues/19322#issuecomment-1433175455
    tf cloud
        Make it work
    tarball location
        create storage account and backend to manage it
        backend
    check audit
    
    Split disks to 3:
        apps - 15.0 GB
        data - 20.0 GB
        logs - 1.0 GB
    
docs playground
    remove keypair from globals, making them none aws modules
    create single vault for all secrets
